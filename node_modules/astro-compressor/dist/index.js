import { fileURLToPath } from "node:url";
import { brotli, gzip } from "./compress.js";
const defaultFileExtensions = [".css", ".js", ".html", ".xml", ".cjs", ".mjs", ".svg", ".txt"];
const defaultOptions = {
    gzip: true,
    brotli: true,
    fileExtensions: defaultFileExtensions,
    batchSize: 10,
};
export default function (opts = defaultOptions) {
    const options = { ...defaultOptions, ...opts };
    return {
        name: "astro-compressor",
        hooks: {
            "astro:build:done": async ({ dir, logger }) => {
                const path = fileURLToPath(dir);
                await Promise.allSettled([
                    gzip(path, logger, options.fileExtensions, options.gzip, options.batchSize),
                    brotli(path, logger, options.fileExtensions, options.brotli, options.batchSize),
                ]);
                logger.info("Compression finished\n");
            },
        },
    };
}
